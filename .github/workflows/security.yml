name: Secure CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  security-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit safety pytest pytest-cov

      # Analyse de sécurité statique avec Bandit
      - name: Run Bandit security checks
        run: |
          bandit -r ./app -f json -o bandit-results.json
        continue-on-error: true

      # Analyse des dépendances avec Safety
      - name: Check dependencies with Safety
        run: |
          safety check
        continue-on-error: true

      # Analyse des vulnérabilités avec Snyk
      - name: Run Snyk
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      # Tests unitaires avec couverture
      - name: Run tests with coverage
        run: |
          pytest --cov=app tests/ --cov-report=xml

      # Analyse de qualité avec SonarQube
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Génération et upload des rapports
      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            bandit-results.json
            coverage.xml

  dependency-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Analyse des dépendances dans les PR
      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high

  security-gate:
    needs: [security-analysis, dependency-review]
    runs-on: ubuntu-latest
    steps:
      - name: Check security results
        run: |
          if [ -f bandit-results.json ]; then
            if grep -q "HIGH" bandit-results.json; then
              echo "High severity security issues found!"
              exit 1
            fi
          fi